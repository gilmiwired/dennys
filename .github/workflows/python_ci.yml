name: python CI

on:
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install pipx
        run: python -m pip install pipx && pipx ensurepath

      - name: Install Poetry
        run: pipx install poetry

      - name: Running tests
        run: |
          set -e
          for dir in */ ; do
            if [[ -f "${dir}pyproject.toml" ]]; then
              echo "Processing ${dir}..."
              cd "${dir}"
              poetry install --no-root
              poetry run python -m pip install types-requests
              echo "Running formatter..."
              poetry run black --check .
              echo "Running linter..."
              poetry run mypy .
              cd ..
            else
              echo "No pyproject.toml found in ${dir}, skipping..."
            fi
          done

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: pytest-results
          path: '**/pytest-results.xml'
