name: randuraft_endpoint CI

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('randuraft_endpoint/**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install pipx
        run: python -m pip install pipx && pipx ensurepath

      - name: Install Poetry
        run: pipx install poetry

      - name: Install dependencies
        run: |
          set -e
          echo "Processing randuraft_endpoint/ directory..."
          cd randuraft_endpoint/
          poetry install --no-root

      - name: Run tests and checks
        run: |
          set -e
          cd randuraft_endpoint/
          echo "Running formatter..."
          poetry run black --check .
          poetry run isort --check-only .
          echo "Running linter..."
          poetry run mypy .
          echo "Running tests..."
          poetry run pytest --junitxml=pytest-results.xml

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: pytest-results
          path: randuraft_endpoint/**/pytest-results.xml
